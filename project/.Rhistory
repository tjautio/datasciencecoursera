select(cran, ip_id, package, country)
5:20
cran
select(cran, 6:8)
select(cran, re_arch:country)
select(cran, r_arch:country)
select(cran, country:r_acrh)
select(cran, country:r_arch)
cran
select(cran, -time)
select(cran, -X:size)
select(cran, -(X:size))
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swril")
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <== "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US"|country == "IN")
filter(cran, country == "FIN")
filter(cran, size > 100500, r_os == "linux_gnu")
filter(cran, size > 100500 AND r_os == "linux_gnu")
filter(cran, size > 100500 & r_os == "linux_gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(C(3,5,NA,10))
is.na(C(3,5,NA,10))
is.na(C(3, 5, NA, 10))
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
cran
filter(cran, !is.an(r_version))
filter(cran, !is.na(r_version))
cran2 <- select(cran, sixe:ip_id)
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarise(cran, avg_bytes = mean(size))
summarize(cran, avg_bytes = mean(size))
rm(list=ls())
exit
quit
quit()
library(swril)
swirl()
library(swirl)
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean)
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
submit()
reset
reset()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
student2
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
students3
submit()
?spread
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
reset()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
extraxt_numeric("class5")
extract_numeric("class5")
submit()
submit()
submit()
sutudents4
students4
students4
submit()
submit()
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
?bind_rows
packageVersion("dplyr")
bind_rows(passed, failed)
sat
?separate
submit()
?group_by
submit()
exit
exit()
quit()
rm(list = ls())
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
this_day <- today()
this_day
yea(this_day)
year(this_day)
day()
wday(this_day)
wday(this_day, label = TRUE)
this_moment(now())
this_moment<-now()
this_moment
hour(this_moment)
0
quit()
library(dplyr)
library(reshape2)
library(tidyr)
setwd("./Github/datasciencecoursera/project/")
# Load datasets
testx <- read.table("./UCI HAR Dataset/test/X_test.txt")
testy <- read.table("./UCI HAR Dataset/test/y_test.txt")
testsub <- read.table("./UCI HAR Dataset/test/subject_test.txt")
trainx <- read.table("./UCI HAR Dataset/train/X_train.txt")
trainy <- read.table("./UCI HAR Dataset/train/y_train.txt")
trainsub <- read.table("./UCI HAR Dataset/train/subject_train.txt")
features <- read.table("./UCI HAR Dataset/features.txt")
actnam <- read.table("./UCI HAR Dataset/activity_labels.txt")
actnam <- cbind(actnam, c("walk", "walkup", "walkdown", "sit", "stand", "lay"))
# Rename variables
names(actnam) <- c("id", "long", "activity")
names(testx) <- features[[2]]
names(trainx) <- features[[2]]
names(testy) <- "activity"
names(trainy) <- "activity"
names(trainsub) <- "subject"
names(testsub) <- "subject"
# Combining the columns
testx <- cbind(testy, testsub, testx)
trainx <- cbind(trainy, trainsub, trainx)
ka1 <- filter(features, grepl("mean", features$V2) | grepl("std", features$V2))
vars <- rbind(1,2,ka1[1]+2)
train <- trainx[vars[,1]]
test <- testx[vars[,1]]
#train <- cbind(trainx[1:2],train)
#test <- testx[vars[,1]]
# Combining the datasets
#test2 <- melt(test, id.vars = c(names(test[1:2])), measure.vars = c(names(test[3:81])))
#train2 <- melt(train, id.vars = c(names(train[1:2])), measure.vars = c(names(train[3:81])))
#data <- merge(test2,train2, by = intersect(names(test2), names(train2)))
#data <- merge(test,train, by = intersect(names(test), names(train)))
data <- rbind(test, train)
# renaming the activities
data$activity <- sub(1, actnam[1,3],data$activity)
data$activity <- sub(2, actnam[2,3],data$activity)
data$activity <- sub(3, actnam[3,3],data$activity)
data$activity <- sub(4, actnam[4,3],data$activity)
data$activity <- sub(5, actnam[5,3],data$activity)
data$activity <- sub(6, actnam[6,3],data$activity)
# renaming the variables
names(data) <- tolower(names(data))
names(data) <- gsub("-", "", names(data))
head(data)
data <- group_by(data, subject)
new_data <- summarise(data, ka = mean(data[,4]))
warnings()
data[,4]
new_data
new_data <- summarise(data, ka = mean(data[,5]))
new_data
?xtabs
xtabs(subject ~ data[,4:6])
xtabs(data$subject ~ data[,4:6])
xtabs(data$subject ~ data[,4:6], data = data)
data[,4:6]
tapply(data, data$subject, mean)
tapply(data, data$subject, mean())
data <- group_by(data, subject)
new_data <- summarise(data)
new_data
data <- group_by(data, subject, activity)
new_data <- summarise(data)
new_data
?summarize
tbl_df(data)
data2 <- group_by(tbl_df(data))
new_data <- summarise(data, mean(data[,4]))
data[,4]
data[,1:4]
mean(data[,4])
data[,4]
as.numeric(data[,4])
data[,4]
data[[4]]
head(data[[4]])
data <- group_by(data, subject, activity)
new_data <- summarise(data, mean(data[[4]]))
new_data
new_data <- summarise(data, names(data[,4] = mean(data[[4]]))
new_data
tail(new_data)
data <- group_by(data, subject, activity)
new_data <- summarise(data, mean(data[[4]]))
new_data
library(plyr)
library(plyr)
library(dplyr)
sdata <- ddply(data, c("subject", "activity"), summarise,
mean = mean(data[[4]]))
sdata
mean = mean(data[[6]]))
sdata <- ddply(data, c("subject", "activity"), summarise,
mean = mean(data[[6]]))
sdata
sdata <- ddply(data, c("subject", "activity"), summarise,
mean = mean(data[[47]]))
sdata
?ddply
sdata <- ddply(data, data[,1:2], summarise,
mean = mean(data[[47]]))
data[,1:2]
data[[,1:2]]
data[[1:2]]
data[[1]]
data[[1:2]]
data[[1:3]]
data[[1]][1]
data[[1]][2]
data[[1]][3]
data[[1]][4]
data[[1]][10]
data[[1]][100]
mean = mean(data[[47]]))
sdata <- ddply(data, data[[1]], summarise,
mean = mean(data[[47]]))
data <- group_by(data, subject, activity)
new_data <- summarise(data, mean(data[[3:81]]))
rm(list=ls())
library(dplyr)
library(reshape2)
library(tidyr)
setwd("./Github/datasciencecoursera/project/")
# Load datasets
testx <- read.table("./UCI HAR Dataset/test/X_test.txt")
testy <- read.table("./UCI HAR Dataset/test/y_test.txt")
testsub <- read.table("./UCI HAR Dataset/test/subject_test.txt")
trainx <- read.table("./UCI HAR Dataset/train/X_train.txt")
trainy <- read.table("./UCI HAR Dataset/train/y_train.txt")
trainsub <- read.table("./UCI HAR Dataset/train/subject_train.txt")
features <- read.table("./UCI HAR Dataset/features.txt")
actnam <- read.table("./UCI HAR Dataset/activity_labels.txt")
actnam <- cbind(actnam, c("walk", "walkup", "walkdown", "sit", "stand", "lay"))
# Rename variables
names(actnam) <- c("id", "long", "activity")
names(testx) <- features[[2]]
names(trainx) <- features[[2]]
names(testy) <- "activity"
names(trainy) <- "activity"
names(trainsub) <- "subject"
names(testsub) <- "subject"
# Combining the columns
testx <- cbind(testy, testsub, testx)
trainx <- cbind(trainy, trainsub, trainx)
ka1 <- filter(features, grepl("mean", features$V2) | grepl("std", features$V2))
vars <- rbind(1,2,ka1[1]+2)
train <- trainx[vars[,1]]
test <- testx[vars[,1]]
#train <- cbind(trainx[1:2],train)
#test <- testx[vars[,1]]
# Combining the datasets
#test2 <- melt(test, id.vars = c(names(test[1:2])), measure.vars = c(names(test[3:81])))
#train2 <- melt(train, id.vars = c(names(train[1:2])), measure.vars = c(names(train[3:81])))
#data <- merge(test2,train2, by = intersect(names(test2), names(train2)))
#data <- merge(test,train, by = intersect(names(test), names(train)))
data <- rbind(test, train)
# renaming the activities
data$activity <- sub(1, actnam[1,3],data$activity)
data$activity <- sub(2, actnam[2,3],data$activity)
data$activity <- sub(3, actnam[3,3],data$activity)
data$activity <- sub(4, actnam[4,3],data$activity)
data$activity <- sub(5, actnam[5,3],data$activity)
data$activity <- sub(6, actnam[6,3],data$activity)
# renaming the variables
names(data) <- tolower(names(data))
names(data) <- gsub("-", "", names(data))
# calculating the means for subject and activity pairs
data <- group_by(data, subject, activity)
new_data <- summarise(data, mean(data[[3:81]]))
data[[3:81]]
data[3:81]
names(data)
new_data <- summarise(group_by(data, subject, activity), thebodyaccmean = mean(data[[3]]))
new_data
data$thebodyaccmean
data
data$subject
as.data.frame(data)
data <- as.data.frame(data)
new_data <- summarise(group_by(data, subject, activity), thebodyaccmean = mean(data[[3]]))
new_data
new_data <- summarise(group_by(data, subject, activity), mean(data[[3]]))
data <- group_by(data, subject, activity)
new_data <- summarise(data, mean(data[[3]]))
new_data
?summarise
mean(data[[4]])
mean(data[4])
data[4]
data$thebodyaccmean()y
testx <- read.table("./UCI HAR Dataset/test/X_test.txt")
testy <- read.table("./UCI HAR Dataset/test/y_test.txt")
testsub <- read.table("./UCI HAR Dataset/test/subject_test.txt")
trainx <- read.table("./UCI HAR Dataset/train/X_train.txt")
trainy <- read.table("./UCI HAR Dataset/train/y_train.txt")
trainsub <- read.table("./UCI HAR Dataset/train/subject_train.txt")
features <- read.table("./UCI HAR Dataset/features.txt")
actnam <- read.table("./UCI HAR Dataset/activity_labels.txt")
actnam <- cbind(actnam, c("walk", "walkup", "walkdown", "sit", "stand", "lay"))
# Rename variables
names(actnam) <- c("id", "long", "activity")
names(testx) <- features[[2]]
names(trainx) <- features[[2]]
names(testy) <- "activity"
names(trainy) <- "activity"
names(trainsub) <- "subject"
names(testsub) <- "subject"
# Combining the columns
testx <- cbind(testy, testsub, testx)
trainx <- cbind(trainy, trainsub, trainx)
ka1 <- filter(features, grepl("mean", features$V2) | grepl("std", features$V2))
vars <- rbind(1,2,ka1[1]+2)
train <- trainx[vars[,1]]
test <- testx[vars[,1]]
#train <- cbind(trainx[1:2],train)
#test <- testx[vars[,1]]
# Combining the datasets
#test2 <- melt(test, id.vars = c(names(test[1:2])), measure.vars = c(names(test[3:81])))
#train2 <- melt(train, id.vars = c(names(train[1:2])), measure.vars = c(names(train[3:81])))
#data <- merge(test2,train2, by = intersect(names(test2), names(train2)))
#data <- merge(test,train, by = intersect(names(test), names(train)))
data <- rbind(test, train)
# renaming the activities
data$activity <- sub(1, actnam[1,3],data$activity)
data$activity <- sub(2, actnam[2,3],data$activity)
data$activity <- sub(3, actnam[3,3],data$activity)
data$activity <- sub(4, actnam[4,3],data$activity)
data$activity <- sub(5, actnam[5,3],data$activity)
data$activity <- sub(6, actnam[6,3],data$activity)
# renaming the variables
names(data) <- tolower(names(data))
names(data) <- gsub("-", "", names(data))
# calculating the means for subject and activity pairs
data <- as.data.frame(data)
data <- group_by(data, subject, activity)
names(data)
new_data <- summarize(data, paska <- mean(thbodyaccmeanx))
new_data <- summarize(data, paska <- mean(data$thbodyaccmeanx))
data#thbodyaccmeanx
data$thbodyaccmeanx
str(data)
data[1,]
data[2,]
as.list(data[2,1])
as.list(data[2,])
data <- as.data.frame(data)
summary(data)
data <- group_by(data, subject)
new_data <- summarize(data, paska <- mean(activity))
new_data <- summarize(data, paska <- mean(as.numeric(activity)))
data <- data.frame(data)
data
str(data)
data <- group_by(data, subject)
str(data)
new_data <- summarize(data, paska <- mean(activity))
new_data <- summarize(data, paska <- mean(tbodyaccjerkmeanz))
new_data
new_data <- summarize(data, paska = mean(tbodyaccjerkmeanz))
new_data
summary(data)
data[3:6]
data <- data.frame(data)
data[3:6]
new_data <- summarize(data, c("1","2","3","4") = mean(data[3:6]))
new_data <- summarize(data, c("1","2","3","4") = mean(data[3:6]))
new_data <- melt(data, id.vars = c(names(data[1:2])), measure.vars = c(names(data[3:81])))
head(new_data)
data <- group_by(data, subject)
new_data2 <- summarize(data, thbodyaccmeanx = mean(value))
new_data2 <- summarize(new_data, thbodyaccmeanx = mean(value))
new_data2
mean(new_data2$value)
data <- group_by(new_data, subject, activity)
new_data2 <- summarize(new_data, thbodyaccmeanx = mean(value))
new_data2
data <- data.frame(data)
new_data <- melt(data, id.vars = c(names(data[1:2])), measure.vars = c(names(data[3:81])))
new_data <- melt(data, id.vars = c(names(data[1:2])), measure.vars = c(names(data[3:81])))
testx <- read.table("./UCI HAR Dataset/test/X_test.txt")
testy <- read.table("./UCI HAR Dataset/test/y_test.txt")
testsub <- read.table("./UCI HAR Dataset/test/subject_test.txt")
trainx <- read.table("./UCI HAR Dataset/train/X_train.txt")
trainy <- read.table("./UCI HAR Dataset/train/y_train.txt")
trainsub <- read.table("./UCI HAR Dataset/train/subject_train.txt")
features <- read.table("./UCI HAR Dataset/features.txt")
actnam <- read.table("./UCI HAR Dataset/activity_labels.txt")
actnam <- cbind(actnam, c("walk", "walkup", "walkdown", "sit", "stand", "lay"))
# Rename variables
names(actnam) <- c("id", "long", "activity")
names(testx) <- features[[2]]
names(trainx) <- features[[2]]
names(testy) <- "activity"
names(trainy) <- "activity"
names(trainsub) <- "subject"
names(testsub) <- "subject"
# Combining the columns
testx <- cbind(testy, testsub, testx)
trainx <- cbind(trainy, trainsub, trainx)
ka1 <- filter(features, grepl("mean", features$V2) | grepl("std", features$V2))
vars <- rbind(1,2,ka1[1]+2)
train <- trainx[vars[,1]]
test <- testx[vars[,1]]
#train <- cbind(trainx[1:2],train)
#test <- testx[vars[,1]]
# Combining the datasets
#test2 <- melt(test, id.vars = c(names(test[1:2])), measure.vars = c(names(test[3:81])))
#train2 <- melt(train, id.vars = c(names(train[1:2])), measure.vars = c(names(train[3:81])))
#data <- merge(test2,train2, by = intersect(names(test2), names(train2)))
#data <- merge(test,train, by = intersect(names(test), names(train)))
data <- rbind(test, train)
# renaming the activities
data$activity <- sub(1, actnam[1,3],data$activity)
data$activity <- sub(2, actnam[2,3],data$activity)
data$activity <- sub(3, actnam[3,3],data$activity)
data$activity <- sub(4, actnam[4,3],data$activity)
data$activity <- sub(5, actnam[5,3],data$activity)
data$activity <- sub(6, actnam[6,3],data$activity)
# renaming the variables
names(data) <- tolower(names(data))
names(data) <- gsub("-", "", names(data))
# calculating the means for subject and activity pairs
data <- data.frame(data)
new_data <- melt(data, id.vars = c(names(data[1:2])), measure.vars = c(names(data[3:81])))
new_data
?dcast
head(new_data)
new_data <- dcast(new_data, subject + activity ~ variable, fun.aggregate = mean)
new_data
head(new_data)
?write.table
rm(new_data2)
write.table(new_data, file = "tidy.txt", row.names = FALSE)
head(new_data, n = 13)
names(new_data)
quit()
